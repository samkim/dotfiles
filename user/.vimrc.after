inoremap jk <esc>
inoremap kj <esc>

set guifont=Hack-Regular:h12
set foldnestmax=5
nnoremap <leader>cb :bp <bar> bd! #<cr>

" vim-test
set shell=zsh
let test#ruby#use_binstubs = 0
let test#strategy = "asyncrun"
" open quickfix by default
let g:asyncrun_open = 20
" let g:test#custom_strategies = {
"   \ 'nearest': 'asyncrun',
"   \ 'file':    'asyncrun',
"   \ 'suite':   'asyncrun',
"   \}
nnoremap <leader>tn :TestNearest<CR>
nnoremap <leader>tf :TestFile<CR>
nnoremap <leader>ts :TestSuite<CR>
nnoremap <leader>tl :TestLast<CR>
nnoremap <leader>tv :TestVisit<CR>

" neocomplete
set luadll=/usr/local/Cellar/lua/5.3.5_1/lib/liblua5.3.dylib


" CloseTag Plugin
" filenames like *.xml, *.html, *.xhtml, ...
" These are the file extensions where this plugin is enabled.
let g:closetag_filenames = '*.html,*.xhtml,*.phtml'

" filenames like *.xml, *.xhtml, ...
" This will make the list of non-closing tags self-closing in the specified files.
let g:closetag_xhtml_filenames = '*.xhtml,*.jsx'

" filetypes like xml, html, xhtml, ...
" These are the file types where this plugin is enabled.
let g:closetag_filetypes = 'html,xhtml,phtml'

" filetypes like xml, xhtml, ...
" This will make the list of non-closing tags self-closing in the specified files.
let g:closetag_xhtml_filetypes = 'xhtml,jsx'

" integer value [0|1]
" This will make the list of non-closing tags case-sensitive (e.g. `<Link>` will be closed while `<link>` won't.)
let g:closetag_emptyTags_caseSensitive = 1

" Shortcut for closing tags, default is '>'
let g:closetag_shortcut = '>'

" Add > at current position without closing the current tag, default is ''
let g:closetag_close_shortcut = '<leader>>'


" ALE Plugin
nmap <silent> <leader>aj :ALENext<cr>
nmap <silent> <leader>ak :ALEPrevious<cr>
nmap <silent> <leader>af :ALEFix<cr>
nmap <silent> <leader>al :ALELint<cr>

" Set this variable to 1 to fix files when you save them.
let g:ale_fix_on_save = 1
let g:ale_lint_on_text_changed = 'never'
" You can disable this option too
" if you don't want linters to run on opening a file
let g:ale_lint_on_enter = 0

let g:ale_linters = {
\   'css': ['prettier'],
\   'javascript': ['prettier-eslint'],
\   'json': ['prettier'],
\   'ruby': ['rubocop'],
\   'scss': ['prettier'],
\   'vue': ['prettier'],
\}

let g:ale_fixers = {
\   '*': ['remove_trailing_lines', 'trim_whitespace'],
\   'css': ['prettier'],
\   'javascript': ['prettier-eslint'],
\   'json': ['prettier'],
\   'ruby': ['rubocop'],
\   'scss': ['prettier'],
\   'vue': ['prettier'],
\}
